---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{include "redis.fullname" .}}
  labels: {{- include "redis.labels" . | nindent 4}}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}  
  selector:
    matchLabels:
      app.kubernetes.io/component: redis
      {{- include "redis.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/component: redis
        {{- include "redis.labels" . | nindent 8 }}
	      {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      volumes:
        - name: redis-conf
          secret:
            secretName: {{include "redis.fullname" .}}-creds
        - name: script-vol
          configMap:
            name: {{include "redis.fullname" .}}
            defaultMode: 0755
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            {{- range $name, $port := .Values.service }}
            - name: {{ .name }}
              containerPort: {{ .port }}
            {{- end }}
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - redis-cli --user $REDISCLI_USER -h $HOSTNAME shutdown save
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - test $(redis-cli --user $REDISCLI_USER -h $HOSTNAME ping) == PONG
            initialDelaySeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - test $(redis-cli --user $REDISCLI_USER -h $HOSTNAME ping) == PONG
            initialDelaySeconds: 15
            timeoutSeconds: 1
            failureThreshold: 3
          command:
            - /script/update-ip.sh
            - redis-server
            - /conf/redis.conf
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: REDISCLI_AUTH
              valueFrom:
                secretKeyRef:
                  key: password
                  name:  {{include "redis.fullname" .}}-creds
            - name: REDISCLI_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name:  {{include "redis.fullname" .}}-creds
          volumeMounts:
            - name: data-vol
              mountPath: /data
            - name: redis-conf
              mountPath: /conf/redis.conf
              subPath: redis.conf
              readOnly: true
            - name: script-vol
              mountPath: /script
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: data-vol
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.dataVolumeSize }}
        volumeMode: Filesystem